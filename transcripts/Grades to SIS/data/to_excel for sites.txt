#Rainier Grades
de_index = pg_ca['site_id'] == 1
pg_de = pg_ca[de_index]
inc_de_index = pg_de['grade'].isin(['F','I','NP'])
inc_de = pg_de[inc_de_index]

grades_by_gl_de = pg_de.pivot_table(index='grade',
                                      columns='current_grade_level',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_gl_de = grades_by_gl_de.fillna(0).astype(int)

grades_by_course_de = pg_de.pivot_table(index=['department_name','short_name'],
                                      columns='grade',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_course_de = grades_by_course_de.fillna(0).astype(int)

#export to Excel
writer = ExcelWriter('../data/Outputs/posted_grades/de_final_grades_sy18.xlsx')
pg_de.to_excel(writer,'all_grades')
inc_de.to_excel(writer,'incompletes')
grades_by_gl_de.to_excel(writer,'grades by grade level')
grades_by_course_de.to_excel(writer,'grades by course')
writer.save()

#Tahoma Grades
ta_index = pg_ca['site_id'] == 2
pg_ta = pg_ca[ta_index]
inc_ta_index = pg_ta['grade'].isin(['F','I','NP'])
inc_ta = pg_ta[inc_ta_index]

grades_by_gl_ta = pg_ta.pivot_table(index='grade',
                                      columns='current_grade_level',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_gl_ta = grades_by_gl_ta.fillna(0).astype(int)

grades_by_course_ta = pg_ta.pivot_table(index=['department_name','short_name'],
                                      columns='grade',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_course_ta = grades_by_course_ta.fillna(0).astype(int)

#export to Excel
writer = ExcelWriter('../data/Outputs/posted_grades/ta_final_grades_sy18.xlsx')
pg_ta.to_excel(writer,'all_grades')
inc_ta.to_excel(writer,'incompletes')
grades_by_gl_ta.to_excel(writer,'grades by grade level')
grades_by_course_ta.to_excel(writer,'grades by course')
writer.save()

#Summit Prep Grades
sp_index = pg_ca['site_id'] == 3
pg_sp = pg_ca[sp_index]
inc_sp_index = pg_sp['grade'].isin(['F','I','NP'])
inc_sp = pg_sp[inc_sp_index]

grades_by_gl_sp = pg_sp.pivot_table(index='grade',
                                      columns='current_grade_level',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_gl_sp = grades_by_gl_sp.fillna(0).astype(int)

grades_by_course_sp = pg_sp.pivot_table(index=['department_name','short_name'],
                                      columns='grade',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_course_sp = grades_by_course_sp.fillna(0).astype(int)

#export to Excel
writer = ExcelWriter('../data/Outputs/posted_grades/sp_final_grades_sy18.xlsx')
pg_sp.to_excel(writer,'all_grades')
inc_sp.to_excel(writer,'incompletes')
grades_by_gl_sp.to_excel(writer,'grades by grade level')
grades_by_course_sp.to_excel(writer,'grades by course')
writer.save()

#Everest Grades
ev_index = pg_ca['site_id'] == 4
pg_ev = pg_ca[ev_index]
inc_ev_index = pg_ev['grade'].isin(['F','I','NP'])
inc_ev = pg_ev[inc_ev_index]

grades_by_gl_ev = pg_ev.pivot_table(index='grade',
                                      columns='current_grade_level',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_gl_ev = grades_by_gl_ev.fillna(0).astype(int)

grades_by_course_ev = pg_ev.pivot_table(index=['department_name','short_name'],
                                      columns='grade',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_course_ev = grades_by_course_ev.fillna(0).astype(int)

#export to Excel
writer = ExcelWriter('../data/Outputs/posted_grades/ev_final_grades_sy18.xlsx')
pg_ev.to_excel(writer,'all_grades')
inc_ev.to_excel(writer,'incompletes')
grades_by_gl_ev.to_excel(writer,'grades by grade level')
grades_by_course_ev.to_excel(writer,'grades by course')
writer.save()

#Denali Grades
de_index = pg_ca['site_id'] == 5
pg_de = pg_ca[de_index]
inc_de_index = pg_de['grade'].isin(['F','I','NP'])
inc_de = pg_de[inc_de_index]

grades_by_gl_de = pg_de.pivot_table(index='grade',
                                      columns='current_grade_level',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_gl_de = grades_by_gl_de.fillna(0).astype(int)

grades_by_course_de = pg_de.pivot_table(index=['department_name','short_name'],
                                      columns='grade',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_course_de = grades_by_course_de.fillna(0).astype(int)

#export to Excel
writer = ExcelWriter('../data/Outputs/posted_grades/de_final_grades_sy18.xlsx')
pg_de.to_excel(writer,'all_grades')
inc_de.to_excel(writer,'incompletes')
grades_by_gl_de.to_excel(writer,'grades by grade level')
grades_by_course_de.to_excel(writer,'grades by course')
writer.save()

#Shasta Grades
sh_index = pg_ca['site_id'] == 6
pg_sh = pg_ca[sh_index]
inc_sh_index = pg_sh['grade'].isin(['F','I','NP'])
inc_sh = pg_sh[inc_sh_index]

grades_by_gl_sh = pg_sh.pivot_table(index='grade',
                                      columns='current_grade_level',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_gl_sh = grades_by_gl_sh.fillna(0).astype(int)

grades_by_course_sh = pg_sh.pivot_table(index=['department_name','short_name'],
                                      columns='grade',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_course_sh = grades_by_course_sh.fillna(0).astype(int)

#export to Excel
writer = ExcelWriter('../data/Outputs/posted_grades/sh_final_grades_sy18.xlsx')
pg_sh.to_excel(writer,'all_grades')
inc_sh.to_excel(writer,'incompletes')
grades_by_gl_sh.to_excel(writer,'grades by grade level')
grades_by_course_sh.to_excel(writer,'grades by course')
writer.save()

#K2 Grades
k2_index = pg_ca['site_id'] == 7
pg_k2 = pg_ca[k2_index]
inc_k2_index = pg_k2['grade'].isin(['F','I','NP'])
inc_k2 = pg_k2[inc_k2_index]

grades_by_gl_k2 = pg_k2.pivot_table(index='grade',
                                      columns='current_grade_level',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_gl_k2 = grades_by_gl_k2.fillna(0).astype(int)

grades_by_course_k2 = pg_k2.pivot_table(index=['department_name','short_name'],
                                      columns='grade',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_course_k2 = grades_by_course_k2.fillna(0).astype(int)

#export to Excel
writer = ExcelWriter('../data/Outputs/posted_grades/k2_final_grades_sy18.xlsx')
pg_k2.to_excel(writer,'all_grades')
inc_k2.to_excel(writer,'incompletes')
grades_by_gl_k2.to_excel(writer,'grades by grade level')
grades_by_course_k2.to_excel(writer,'grades by course')
writer.save()

#Tamalpais Grades
tm_index = pg_ca['site_id'] == 8
pg_tm = pg_ca[tm_index]
inc_tm_index = pg_tm['grade'].isin(['F','I','NP'])
inc_tm = pg_tm[inc_tm_index]

grades_by_gl_tm = pg_tm.pivot_table(index='grade',
                                      columns='current_grade_level',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_gl_tm = grades_by_gl_tm.fillna(0).astype(int)

grades_by_course_tm = pg_tm.pivot_table(index=['department_name','short_name'],
                                      columns='grade',
                                      values='local_student_id',
                                      aggfunc='count',
                                      margins=True)
grades_by_course_tm = grades_by_course_tm.fillna(0).astype(int)

#export to Excel
writer = ExcelWriter('../data/Outputs/posted_grades/tm_final_grades_sy18.xlsx')
pg_tm.to_excel(writer,'all_grades')
inc_tm.to_excel(writer,'incompletes')
grades_by_gl_tm.to_excel(writer,'grades by grade level')
grades_by_course_tm.to_excel(writer,'grades by course')
writer.save()